const CheckOwner = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"address":{"type":"string","examples":["0x2474a7227877f2b65185f09468af7c6577fa207c"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain address of the wallet."},"tokenAddress":{"type":"string","description":"The blockchain address of the token (NFT collection or any fungible token).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"The ID of a specific NFT token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain","address","tokenAddress"]}]},"response":{"200":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const CheckOwnerV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"address":{"type":"string","examples":["0x2474a7227877f2b65185f09468af7c6577fa207c"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain address of the wallet."},"tokenAddress":{"type":"string","description":"The blockchain address of the token (NFT collection or any fungible token).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"The ID of a specific NFT token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain","address","tokenAddress"]}]},"response":{"200":{"type":"boolean","examples":[true],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBalances = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","celo","celo-testnet","bsc","bsc-testnet","polygon","tezos","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"addresses":{"type":"string","description":"The blockchain public wallet addresses.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n","examples":["0x80d8bac9a6901698b3749fe336bbd1385c1f98f2,0xAe680Ed83baF08a8028118Bd19859F8a0E744cc6"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenTypes":{"type":"string","enum":["nft","multitoken","fungible"],"examples":["nft,multitoken"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to select only specific token types.\nIt is possible to enter list of multiple types as a comma separated string.\nUse fungible (ERC-20), nft (includes ERC-721 and ERC-1155) or multitoken (ERC-1155 only).\n"},"excludeMetadata":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to exclude metadata from the response."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","addresses"]}]},"response":{"200":{"type":"object","properties":{"result":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"type":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"address":{"type":"string"},"balance":{"type":"string"}},"required":["chain","type","address","balance"]},{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"type":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"address":{"type":"string"},"balance":{"type":"string"},"tokenAddress":{"type":"string"},"tokenId":{"type":"string"},"metadataURI":{"type":"string"},"lastUpdatedBlockNumber":{"type":"integer"},"metadata":{"type":"object","additionalProperties":true}},"required":["chain","type","address","balance","tokenAddress","lastUpdatedBlockNumber"]},{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"type":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"address":{"type":"string"},"balance":{"type":"string"},"tokenAddress":{"type":"string"},"lastUpdatedBlockNumber":{"type":"integer"}},"required":["chain","type","address","balance","tokenAddress","lastUpdatedBlockNumber"]}]},"description":"List of all balances for all selected tokens."},"prevPage":{"type":"string","description":"Cursor pagination, used to get previous page of results (work in progress, not used right now).","examples":[""]},"nextPage":{"type":"string","description":"Cursor pagination, used to get next page of results (work in progress, not used right now).","examples":[""]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBalancesV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","celo","celo-testnet","bsc","bsc-testnet","polygon","tezos","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"addresses":{"type":"string","description":"The blockchain public wallet addresses.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n","examples":["0x80d8bac9a6901698b3749fe336bbd1385c1f98f2,0xAe680Ed83baF08a8028118Bd19859F8a0E744cc6"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenTypes":{"type":"string","enum":["nft","multitoken","fungible"],"examples":["nft,multitoken"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to select only specific token types.\nIt is possible to enter list of multiple types as a comma separated string.\nUse fungible (ERC-20), nft (includes ERC-721 and ERC-1155) or multitoken (ERC-1155 only).\n"},"excludeMetadata":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to exclude metadata from the response."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","addresses"]}]},"response":{"200":{"type":"object","properties":{"result":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"type":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"address":{"type":"string"},"balance":{"type":"string"}},"required":["chain","type","address","balance"]},{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"type":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"address":{"type":"string"},"balance":{"type":"string"},"tokenAddress":{"type":"string"},"tokenId":{"type":"string"},"metadataURI":{"type":"string"},"lastUpdatedBlockNumber":{"type":"integer"},"metadata":{"type":"object","additionalProperties":true}},"required":["chain","type","address","balance","tokenAddress","lastUpdatedBlockNumber"]},{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"type":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"address":{"type":"string"},"balance":{"type":"string"},"tokenAddress":{"type":"string"},"lastUpdatedBlockNumber":{"type":"integer"}},"required":["chain","type","address","balance","tokenAddress","lastUpdatedBlockNumber"]}]},"description":"List of all balances for all selected tokens."},"prevPage":{"type":"string","description":"Cursor pagination, used to get previous page of results (work in progress, not used right now).","examples":[""]},"nextPage":{"type":"string","description":"Cursor pagination, used to get next page of results (work in progress, not used right now).","examples":[""]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBlocks = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"blockIds":{"type":"array","items":{"type":"integer"},"minimum":0,"examples":["1,2,4,400"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"List of block numbers, separated by comma."},"blockFrom":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Range of block numbers. Both blockFrom and blockTo need to be specified."},"blockTo":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Range of block numbers. Both blockFrom and blockTo need to be specified."},"timeFrom":{"type":"string","examples":["2022-12-24T00:10"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Date range when blocks were processed. Both timeFrom and timeTo need to be specified."},"timeTo":{"type":"string","examples":["2022-12-24T00:20"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Date range when blocks were processed. Both timeFrom and timeTo need to be specified."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain"]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"blockNumber":{"type":"integer","description":"The block number in the blockchain.","examples":[10]},"blockTimestamp":{"type":"integer","format":"int64","description":"The timestamp when the block was created, in milliseconds since Unix epoch.","examples":[1598671520000],"minimum":-9223372036854776000,"maximum":9223372036854776000},"hash":{"type":"string","description":"The hash of the block.","examples":["0xec1a2d906f34e1981b2b1a15dbe5e10cf640e8b4b27dc056ebb65c0409b5a9af"]},"eventIngestedSize":{"type":"integer","description":"The number of ingested events in the block.","examples":[0]},"nftIngestedSize":{"type":"integer","description":"The number of ingested NFTs in the block.","examples":[0]},"txHashes":{"type":"array","items":{"type":"string"},"description":"The array of transaction hashes included in the block.","examples":["0x19eaae1f7bdd28605f4175d7e87c9de68431bf76e85a262e268252a84bfc3984"]}}},"description":"List of blocks added to a blockchain.","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBlocksV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"blockIds":{"type":"array","items":{"type":"integer"},"minimum":0,"examples":["1,2,4,400"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"List of block numbers, separated by comma."},"blockFrom":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Range of block numbers. Both blockFrom and blockTo need to be specified."},"blockTo":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Range of block numbers. Both blockFrom and blockTo need to be specified."},"timeFrom":{"type":"string","examples":["2022-12-24T00:10"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Date range when blocks were processed. Both timeFrom and timeTo need to be specified."},"timeTo":{"type":"string","examples":["2022-12-24T00:20"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Date range when blocks were processed. Both timeFrom and timeTo need to be specified."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain"]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"blockNumber":{"type":"integer","description":"The block number in the blockchain.","examples":[10]},"blockTimestamp":{"type":"integer","format":"int64","description":"The timestamp when the block was created, in milliseconds since Unix epoch.","examples":[1598671520000],"minimum":-9223372036854776000,"maximum":9223372036854776000},"hash":{"type":"string","description":"The hash of the block.","examples":["0xec1a2d906f34e1981b2b1a15dbe5e10cf640e8b4b27dc056ebb65c0409b5a9af"]},"eventIngestedSize":{"type":"integer","description":"The number of ingested events in the block.","examples":[0]},"nftIngestedSize":{"type":"integer","description":"The number of ingested NFTs in the block.","examples":[0]},"txHashes":{"type":"array","items":{"type":"string"},"description":"The array of transaction hashes included in the block.","examples":["0x19eaae1f7bdd28605f4175d7e87c9de68431bf76e85a262e268252a84bfc3984"]}}},"description":"List of blocks added to a blockchain.","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCollections = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"collectionAddresses":{"type":"string","description":"The blockchain addresses of the collections.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenTypes":{"type":"string","enum":["nft","multitoken"],"examples":["nft"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to select only specific token types.\nIt is possible to enter list of multiple types as a comma separated string.\nUse nft (includes ERC-721 and ERC-1155) or multitoken (ERC-1155 only).\n"},"excludeMetadata":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to exclude metadata from the response."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","collectionAddresses"]}]},"response":{"200":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"tokenId":{"type":"string","description":"ID of the token.","maxLength":78,"format":"uint256","examples":["3"]},"tokenAddress":{"type":"string","description":"Contract address of the token.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"]},"tokenType":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"metadataURI":{"type":"string","description":"Metadata URL of the token. This data doesn't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","examples":["ipfs://QmTDcCdt3yb6mZitzWBmQr65AW6Wska295Dg9nbEYpSUDR/3"]},"metadata":{"type":"object","description":"Metadata scheme obtained from the url. This data don't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","additionalProperties":true}}},{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"tokenId":{"type":"string","description":"ID of the token.","maxLength":78,"format":"uint256","examples":["3"]},"tokenAddress":{"type":"string","description":"Contract address of the token.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"]},"tokenType":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"creator":{"type":"string","description":"Address of the token creator.","examples":["tz1hkNPg5jQ66pJpZH2boiF5AnbAcd1dt5KS"]},"name":{"type":"string","description":"Name of the token.","examples":["My token 1"]}}}]},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetCollectionsV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"collectionAddresses":{"type":"string","description":"The blockchain addresses of the collections.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenTypes":{"type":"string","enum":["nft","multitoken"],"examples":["nft"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to select only specific token types.\nIt is possible to enter list of multiple types as a comma separated string.\nUse nft (includes ERC-721 and ERC-1155) or multitoken (ERC-1155 only).\n"},"excludeMetadata":{"type":"boolean","examples":[false],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to exclude metadata from the response."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","collectionAddresses"]}]},"response":{"200":{"type":"array","items":{"oneOf":[{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"tokenId":{"type":"string","description":"ID of the token.","maxLength":78,"format":"uint256","examples":["3"]},"tokenAddress":{"type":"string","description":"Contract address of the token.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"]},"tokenType":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"metadataURI":{"type":"string","description":"Metadata URL of the token. This data doesn't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","examples":["ipfs://QmTDcCdt3yb6mZitzWBmQr65AW6Wska295Dg9nbEYpSUDR/3"]},"metadata":{"type":"object","description":"Metadata scheme obtained from the url. This data don't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","additionalProperties":true}}},{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"tokenId":{"type":"string","description":"ID of the token.","maxLength":78,"format":"uint256","examples":["3"]},"tokenAddress":{"type":"string","description":"Contract address of the token.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"]},"tokenType":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"creator":{"type":"string","description":"Address of the token creator.","examples":["tz1hkNPg5jQ66pJpZH2boiF5AnbAcd1dt5KS"]},"name":{"type":"string","description":"Name of the token.","examples":["My token 1"]}}}]},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetEvents = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"contractAddresses":{"type":"string","examples":["0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain addresses of the contracts where requested events were emitted.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n"},"blockFrom":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"First block to start from (including this one)."},"blockTo":{"type":"number","minimum":0,"examples":[16779230],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Last block to finish on (including this one)."},"eventType":{"type":"string","enum":["tokenTransfer","multitokenTransfer","stablecoinTransfer","uniswapTrade"],"examples":["tokenTransfer"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The type of events that should be returned, which comes with decoded data in the response\n(cannot be used together with signatures).\n"},"signatures":{"type":"string","examples":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The types of events that should be returned, specified by hashed signature\n(cannot be used together with eventType).\nIt is possible to enter list of multiple signatures as a comma separated string.\n"},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","contractAddresses","blockFrom","blockTo","eventType"]}]},"response":{"200":{"type":"array","items":{"type":"string"},"description":"List of all event data.","properties":{"chain":{"type":"string","description":"Name of the chain.","example":"ethereum"},"address":{"type":"string","description":"The address associated with the event."},"blockNumber":{"type":"integer","description":"The block number where the event was recorded."},"timestamp":{"type":"integer","description":"The timestamp of the event in UNIX format."},"decoded":{"oneOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"decimals":{"type":"integer","description":"The number of decimal places for the transferred token.","example":18},"value":{"type":"string","description":"The value of the transferred token.","example":"1000"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"decimals":{"type":"integer","description":"The number of decimal places for the transferred token.","example":18},"value":{"type":"string","description":"The value of the transferred token.","example":"1000"}}}]},{"type":"object","properties":{"stablecoin":{"type":"string","description":"The address of the stablecoin being transferred.","example":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"}}}]},{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"tokenId":{"type":"string","description":"The unique identifier of the NFT being transferred.","example":"101"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"operator":{"type":"string","description":"The address of the operator initiating the transfer.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"}}}]},{"type":"object","properties":{"multitokenId":{"type":"string","description":"The unique identifier of the single multitoken being transferred.","example":"1"},"multitokenValue":{"type":"string","description":"The value of the single multitoken being transferred.","example":"100"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"operator":{"type":"string","description":"The address of the operator initiating the transfer.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"}}}]},{"type":"object","properties":{"multitokenIds":{"type":"array","items":{"type":"string"},"description":"The unique identifiers of the multitokens being transferred.","example":["1","2","3"]},"multitokenValues":{"type":"array","items":{"type":"string"},"description":"The values of the multitokens being transferred.","example":["100","200","300"]}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"token0":{"type":"string","description":"The address of the first token involved in the trade.","example":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"token1":{"type":"string","description":"The address of the second token involved in the trade.","example":"0x6b175474e89094c44da98b954eedeac495271d0f"},"partiallyRaw":{"type":"boolean","description":"Indicates whether the trade data is partially raw or not.","example":false}}}]},{"type":"object","properties":{"amount0In":{"type":"string","description":"The input amount of the first token in the trade.","example":"0.5"},"amount1In":{"type":"string","description":"The input amount of the second token in the trade.","example":"0.0"},"amount0Out":{"type":"string","description":"The output amount of the first token in the trade.","example":"0.0"},"amount1Out":{"type":"string","description":"The output amount of the second token in the trade.","example":"1.0"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"token0":{"type":"string","description":"The address of the first token involved in the trade.","example":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"token1":{"type":"string","description":"The address of the second token involved in the trade.","example":"0x6b175474e89094c44da98b954eedeac495271d0f"},"partiallyRaw":{"type":"boolean","description":"Indicates whether the trade data is partially raw or not.","example":false}}}]},{"type":"object","properties":{"amount0":{"type":"string","description":"The net amount of the first token involved in the trade.","example":"0.5"},"amount1":{"type":"string","description":"The net amount of the second token involved in the trade.","example":"1.0"},"sqrtPriceX96":{"type":"string","description":"The square root price of the trading pair scaled by 2^96.","example":"79228162514264337593543950336"},"liquidity":{"type":"string","description":"The liquidity of the trading pair at the time of the trade.","example":"1000"},"tick":{"type":"integer","description":"The tick index of the Uniswap V3 pool at the time of the trade.","example":1000}}}]}],"description":"The decoded event data based on the given models."},"raw":{"type":"object","description":"Raw data associated with the event, including topics and data.","required":["topic_0"],"properties":{"topic_0":{"type":"string","description":"The first topic of the event, if present.","example":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"topic_1":{"type":"string","description":"The second topic of the event, if present.","example":"0x000000000000000000000000742d35cc6634c0532925a3b844bc454e4438f44e"},"topic_2":{"type":"string","description":"The third topic of the event, if present.","example":"0x000000000000000000000000b7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"},"topic_3":{"type":"string","description":"The fourth topic of the event, if present.","example":""},"data":{"type":"string","description":"The data associated with the event, if present.","example":"0x0000000000000000000000000000000000000000000000000de0b6b3a7640000"}}},"txHash":{"type":"string","description":"The transaction hash related to the event."},"txIndex":{"type":"integer","description":"The transaction index within the block."},"logIndex":{"type":"integer","description":"The log index within the transaction."}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetEventsV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"contractAddresses":{"type":"string","examples":["0x95ad61b0a150d79219dcf64e1e6cc01f0b64c4ce"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain addresses of the contracts where requested events were emitted.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n"},"blockFrom":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"First block to start from (including this one)."},"blockTo":{"type":"number","minimum":0,"examples":[16779230],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Last block to finish on (including this one)."},"eventType":{"type":"string","enum":["tokenTransfer","multitokenTransfer","stablecoinTransfer","uniswapTrade"],"examples":["tokenTransfer"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The type of events that should be returned, which comes with decoded data in the response\n(cannot be used together with signatures).\n"},"signatures":{"type":"string","examples":["0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The types of events that should be returned, specified by hashed signature\n(cannot be used together with eventType).\nIt is possible to enter list of multiple signatures as a comma separated string.\n"},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","contractAddresses","blockFrom","blockTo","eventType"]}]},"response":{"200":{"type":"array","items":{"type":"string"},"description":"List of all event data.","properties":{"chain":{"type":"string","description":"Name of the chain.","example":"ethereum"},"address":{"type":"string","description":"The address associated with the event."},"blockNumber":{"type":"integer","description":"The block number where the event was recorded."},"timestamp":{"type":"integer","description":"The timestamp of the event in UNIX format."},"decoded":{"oneOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"decimals":{"type":"integer","description":"The number of decimal places for the transferred token.","example":18},"value":{"type":"string","description":"The value of the transferred token.","example":"1000"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"decimals":{"type":"integer","description":"The number of decimal places for the transferred token.","example":18},"value":{"type":"string","description":"The value of the transferred token.","example":"1000"}}}]},{"type":"object","properties":{"stablecoin":{"type":"string","description":"The address of the stablecoin being transferred.","example":"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48"}}}]},{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"tokenId":{"type":"string","description":"The unique identifier of the NFT being transferred.","example":"101"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"operator":{"type":"string","description":"The address of the operator initiating the transfer.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"}}}]},{"type":"object","properties":{"multitokenId":{"type":"string","description":"The unique identifier of the single multitoken being transferred.","example":"1"},"multitokenValue":{"type":"string","description":"The value of the single multitoken being transferred.","example":"100"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"operator":{"type":"string","description":"The address of the operator initiating the transfer.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"}}}]},{"type":"object","properties":{"multitokenIds":{"type":"array","items":{"type":"string"},"description":"The unique identifiers of the multitokens being transferred.","example":["1","2","3"]},"multitokenValues":{"type":"array","items":{"type":"string"},"description":"The values of the multitokens being transferred.","example":["100","200","300"]}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"token0":{"type":"string","description":"The address of the first token involved in the trade.","example":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"token1":{"type":"string","description":"The address of the second token involved in the trade.","example":"0x6b175474e89094c44da98b954eedeac495271d0f"},"partiallyRaw":{"type":"boolean","description":"Indicates whether the trade data is partially raw or not.","example":false}}}]},{"type":"object","properties":{"amount0In":{"type":"string","description":"The input amount of the first token in the trade.","example":"0.5"},"amount1In":{"type":"string","description":"The input amount of the second token in the trade.","example":"0.0"},"amount0Out":{"type":"string","description":"The output amount of the first token in the trade.","example":"0.0"},"amount1Out":{"type":"string","description":"The output amount of the second token in the trade.","example":"1.0"}}}]},{"allOf":[{"allOf":[{"type":"object","description":"Common properties for decoded data events.","properties":{"label":{"type":"string","description":"The label of the event.","example":"Transfer"},"type":{"type":"string","description":"The type of the event.","example":"FungibleTransfer"},"subtype":{"type":"string","description":"The subtype of the event.","example":"ERC20"},"from":{"type":"string","description":"The sender address of the event.","example":"0x742d35cc6634c0532925a3b844bc454e4438f44e"},"to":{"type":"string","description":"The receiver address of the event.","example":"0xb7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"}}},{"type":"object","properties":{"token0":{"type":"string","description":"The address of the first token involved in the trade.","example":"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"},"token1":{"type":"string","description":"The address of the second token involved in the trade.","example":"0x6b175474e89094c44da98b954eedeac495271d0f"},"partiallyRaw":{"type":"boolean","description":"Indicates whether the trade data is partially raw or not.","example":false}}}]},{"type":"object","properties":{"amount0":{"type":"string","description":"The net amount of the first token involved in the trade.","example":"0.5"},"amount1":{"type":"string","description":"The net amount of the second token involved in the trade.","example":"1.0"},"sqrtPriceX96":{"type":"string","description":"The square root price of the trading pair scaled by 2^96.","example":"79228162514264337593543950336"},"liquidity":{"type":"string","description":"The liquidity of the trading pair at the time of the trade.","example":"1000"},"tick":{"type":"integer","description":"The tick index of the Uniswap V3 pool at the time of the trade.","example":1000}}}]}],"description":"The decoded event data based on the given models."},"raw":{"type":"object","description":"Raw data associated with the event, including topics and data.","required":["topic_0"],"properties":{"topic_0":{"type":"string","description":"The first topic of the event, if present.","example":"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"},"topic_1":{"type":"string","description":"The second topic of the event, if present.","example":"0x000000000000000000000000742d35cc6634c0532925a3b844bc454e4438f44e"},"topic_2":{"type":"string","description":"The third topic of the event, if present.","example":"0x000000000000000000000000b7d49e5aa39ff1e5d1b33286c3a8e5515b6a4e1a"},"topic_3":{"type":"string","description":"The fourth topic of the event, if present.","example":""},"data":{"type":"string","description":"The data associated with the event, if present.","example":"0x0000000000000000000000000000000000000000000000000de0b6b3a7640000"}}},"txHash":{"type":"string","description":"The transaction hash related to the event."},"txIndex":{"type":"integer","description":"The transaction index within the block."},"logIndex":{"type":"integer","description":"The log index within the transaction."}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetLatestBlock = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."}},"required":["chain"]}]},"response":{"200":{"type":"object","properties":{"blockNumber":{"type":"integer","description":"The block number in the blockchain.","examples":[10]},"blockTimestamp":{"type":"integer","format":"int64","description":"The timestamp when the block was created, in milliseconds since Unix epoch.","examples":[1598671520000],"minimum":-9223372036854776000,"maximum":9223372036854776000},"hash":{"type":"string","description":"The hash of the block.","examples":["0xec1a2d906f34e1981b2b1a15dbe5e10cf640e8b4b27dc056ebb65c0409b5a9af"]},"eventIngestedSize":{"type":"integer","description":"The number of ingested events in the block.","examples":[0]},"nftIngestedSize":{"type":"integer","description":"The number of ingested NFTs in the block.","examples":[0]},"txHashes":{"type":"array","items":{"type":"string","examples":["0x01a7983d1391b74305840e4960ba6c61417a9398cb938c3522d0a4a9cedf488f"]},"description":"The array of transaction hashes included in the block.","examples":["0x19eaae1f7bdd28605f4175d7e87c9de68431bf76e85a262e268252a84bfc3984"]}},"description":"Latest block added to a blockchain.","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetLatestBlockV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."}},"required":["chain"]}]},"response":{"200":{"type":"object","properties":{"blockNumber":{"type":"integer","description":"The block number in the blockchain.","examples":[10]},"blockTimestamp":{"type":"integer","format":"int64","description":"The timestamp when the block was created, in milliseconds since Unix epoch.","examples":[1598671520000],"minimum":-9223372036854776000,"maximum":9223372036854776000},"hash":{"type":"string","description":"The hash of the block.","examples":["0xec1a2d906f34e1981b2b1a15dbe5e10cf640e8b4b27dc056ebb65c0409b5a9af"]},"eventIngestedSize":{"type":"integer","description":"The number of ingested events in the block.","examples":[0]},"nftIngestedSize":{"type":"integer","description":"The number of ingested NFTs in the block.","examples":[0]},"txHashes":{"type":"array","items":{"type":"string","examples":["0x01a7983d1391b74305840e4960ba6c61417a9398cb938c3522d0a4a9cedf488f"]},"description":"The array of transaction hashes included in the block.","examples":["0x19eaae1f7bdd28605f4175d7e87c9de68431bf76e85a262e268252a84bfc3984"]}},"description":"Latest block added to a blockchain.","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetMetadata = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"tokenAddress":{"type":"string","description":"The blockchain address of the NFT to get metadata for.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenIds":{"type":"string","description":"The IDs of the tokens to get metadata for.\nIt is possible to enter list of multiple IDs as a comma separated string.\n","maxLength":78,"format":"uint256","examples":["3,4"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain","tokenAddress","tokenIds"]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"tokenId":{"type":"string","description":"ID of the token.","maxLength":78,"format":"uint256","examples":["3"]},"tokenAddress":{"type":"string","description":"Contract address of the token.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"]},"tokenType":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"metadataURI":{"type":"string","description":"Metadata URL of the token. This data doesn't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","examples":["ipfs://QmTDcCdt3yb6mZitzWBmQr65AW6Wska295Dg9nbEYpSUDR/3"]},"metadata":{"type":"object","description":"Metadata scheme obtained from the url. This data don't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","additionalProperties":true}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetMetadataV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"tokenAddress":{"type":"string","description":"The blockchain address of the NFT to get metadata for.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenIds":{"type":"string","description":"The IDs of the tokens to get metadata for.\nIt is possible to enter list of multiple IDs as a comma separated string.\n","maxLength":78,"format":"uint256","examples":["3,4"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain","tokenAddress","tokenIds"]}]},"response":{"200":{"type":"array","items":{"type":"object","properties":{"chain":{"type":"string","description":"Name of the chain.","examples":["ethereum"]},"tokenId":{"type":"string","description":"ID of the token.","maxLength":78,"format":"uint256","examples":["3"]},"tokenAddress":{"type":"string","description":"Contract address of the token.","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"]},"tokenType":{"type":"string","enum":["native","fungible","nft","multitoken"],"description":"Enum representing the type of token.\n\n`native` `fungible` `nft` `multitoken`","examples":["nft"]},"metadataURI":{"type":"string","description":"Metadata URL of the token. This data doesn't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","examples":["ipfs://QmTDcCdt3yb6mZitzWBmQr65AW6Wska295Dg9nbEYpSUDR/3"]},"metadata":{"type":"object","description":"Metadata scheme obtained from the url. This data don't have to be present.\nThe safest way to obtain them in that case is from the NFT Contract.tokenURI() method call.\n","additionalProperties":true}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetOwners = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"tokenAddress":{"type":"string","description":"The blockchain address of the token (NFT collection or any fungible token).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"The ID of a specific NFT token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","tokenAddress"]}]},"response":{"200":{"type":"array","items":{"type":"string"},"description":"List of all addresses that own a token in a specified collection.","examples":["0x0bbf9f25c863fdf19e645c96280004d24f43cb38","0x0bd1b3b12db943f2310a4e53481ae97f8b6c2a75","0x281f4727081ab4a066f321fd6fc8dd0dc063e9fd","0x681cbae1c41e5eec8411dd8e009fa71f81d03f7f","0x7b49a05c15702bbe1db534058ebcc9e950c474ca"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetOwnersV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"tokenAddress":{"type":"string","description":"The blockchain address of the token (NFT collection or any fungible token).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"The ID of a specific NFT token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."}},"required":["chain","tokenAddress"]}]},"response":{"200":{"type":"array","items":{"type":"string"},"description":"List of all addresses that own a token in a specified collection.","examples":["0x0bbf9f25c863fdf19e645c96280004d24f43cb38","0x0bd1b3b12db943f2310a4e53481ae97f8b6c2a75","0x281f4727081ab4a066f321fd6fc8dd0dc063e9fd","0x681cbae1c41e5eec8411dd8e009fa71f81d03f7f","0x7b49a05c15702bbe1db534058ebcc9e950c474ca"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetTokens = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"tokenAddress":{"type":"string","description":"The blockchain address of the token (NFT collection or any fungible token).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"The ID of a specific NFT token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain","tokenAddress"]}]},"response":{"200":{"oneOf":[{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the fungible token.","examples":["USDC"]},"name":{"type":"string","description":"The full name of the fungible token.","examples":["USD Coin"]},"supply":{"type":"string","description":"The total supply of the fungible token.","examples":["1000000000"]},"decimals":{"type":"number","description":"The number of decimal places for the fungible token.","examples":[6]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC20, BEP20).","examples":["ERC20"]},"cap":{"type":"string","description":"The maximum supply cap of the fungible token.","examples":["2000000000"]}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the NFT collection.","examples":["ART"]},"name":{"type":"string","description":"The full name of the NFT collection.","examples":["Art Collection"]},"supply":{"type":"string","description":"The total supply of the NFT collection.","examples":["5000"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC721, ERC1155).","examples":["ERC721"]}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the multitoken collection.","examples":["GAME"]},"name":{"type":"string","description":"The full name of the multitoken collection.","examples":["Game Assets"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC1155).","examples":["ERC1155"]}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the NFT token.","examples":["ART"]},"name":{"type":"string","description":"The name of the NFT token.","examples":["Mona Lisa"]},"metadata":{"type":"object","description":"The metadata associated with the NFT token.","additionalProperties":true},"metadataURI":{"type":"string","description":"The URI of the metadata associated with the NFT token.","examples":["https://example.com/metadata/123"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC721, ERC1155).","examples":["ERC721"]}}},{"type":"object","properties":{"name":{"type":"string","description":"The full name of the NFT collection.","examples":["Art Collection"]},"description":{"type":"string","description":"The total supply of the NFT collection.","examples":["5000"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC721, ERC1155).","examples":["ERC721"]},"contractMetadata":{"type":"object","description":"Additional information about the contract","additionalProperties":true}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the fungible token.","examples":["USDC"]},"name":{"type":"string","description":"The full name of the fungible token.","examples":["USD Coin"]},"description":{"type":"string","description":"The describtion of the fungible token.","examples":["USD Coin"]},"supply":{"type":"string","description":"The total supply of the fungible token.","examples":["1000000000"]},"decimals":{"type":"number","description":"The number of decimal places for the fungible token.","examples":[6]},"tokenType":{"type":"string","description":"The type of the token (e.g., fungible, nft).","examples":["fungible"]}}}],"description":"Information about specific collection or token\n(not all fields are available for every token, e.g. some multitokens do not have name and symbol).\n","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"404":{"properties":{"errorCode":{"description":"data-api.token","type":"string","examples":["data-api.token"]},"message":{"description":"Collection or token not found on chain ${chain}.","type":"string","examples":["Collection or token not found on chain bsc-mainnet."]},"statusCode":{"description":"404","type":"number","examples":[404]}},"required":["errorCode","message","statusCode"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetTokensV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"tokenAddress":{"type":"string","description":"The blockchain address of the token (NFT collection or any fungible token).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"The ID of a specific NFT token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain","tokenAddress"]}]},"response":{"200":{"oneOf":[{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the fungible token.","examples":["USDC"]},"name":{"type":"string","description":"The full name of the fungible token.","examples":["USD Coin"]},"supply":{"type":"string","description":"The total supply of the fungible token.","examples":["1000000000"]},"decimals":{"type":"number","description":"The number of decimal places for the fungible token.","examples":[6]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC20, BEP20).","examples":["ERC20"]},"cap":{"type":"string","description":"The maximum supply cap of the fungible token.","examples":["2000000000"]}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the NFT collection.","examples":["ART"]},"name":{"type":"string","description":"The full name of the NFT collection.","examples":["Art Collection"]},"supply":{"type":"string","description":"The total supply of the NFT collection.","examples":["5000"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC721, ERC1155).","examples":["ERC721"]}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the multitoken collection.","examples":["GAME"]},"name":{"type":"string","description":"The full name of the multitoken collection.","examples":["Game Assets"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC1155).","examples":["ERC1155"]}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the NFT token.","examples":["ART"]},"name":{"type":"string","description":"The name of the NFT token.","examples":["Mona Lisa"]},"metadata":{"type":"object","description":"The metadata associated with the NFT token.","additionalProperties":true},"metadataURI":{"type":"string","description":"The URI of the metadata associated with the NFT token.","examples":["https://example.com/metadata/123"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC721, ERC1155).","examples":["ERC721"]}}},{"type":"object","properties":{"name":{"type":"string","description":"The full name of the NFT collection.","examples":["Art Collection"]},"description":{"type":"string","description":"The total supply of the NFT collection.","examples":["5000"]},"tokenType":{"type":"string","description":"The type of the token (e.g., ERC721, ERC1155).","examples":["ERC721"]},"contractMetadata":{"type":"object","description":"Additional information about the contract","additionalProperties":true}}},{"type":"object","properties":{"symbol":{"type":"string","description":"The symbol of the fungible token.","examples":["USDC"]},"name":{"type":"string","description":"The full name of the fungible token.","examples":["USD Coin"]},"description":{"type":"string","description":"The describtion of the fungible token.","examples":["USD Coin"]},"supply":{"type":"string","description":"The total supply of the fungible token.","examples":["1000000000"]},"decimals":{"type":"number","description":"The number of decimal places for the fungible token.","examples":[6]},"tokenType":{"type":"string","description":"The type of the token (e.g., fungible, nft).","examples":["fungible"]}}}],"description":"Information about specific collection or token\n(not all fields are available for every token, e.g. some multitokens do not have name and symbol).\n","$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"404":{"properties":{"errorCode":{"description":"data-api.token","type":"string","examples":["data-api.token"]},"message":{"description":"Collection or token not found on chain ${chain}.","type":"string","examples":["Collection or token not found on chain bsc-mainnet."]},"statusCode":{"description":"404","type":"number","examples":[404]}},"required":["errorCode","message","statusCode"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetTransactions = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","celo","celo-testnet","bsc","bsc-testnet","polygon","tezos","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"addresses":{"type":"string","examples":["0x2474a7227877f2b65185f09468af7c6577fa207c"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain public wallet addresses.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n"},"transactionTypes":{"type":"string","enum":["fungible","nft","multitoken","native"],"examples":["fungible,nft"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to filter transaction based on types.\nIt is possible to enter list of multiple types as a comma separated string.\nUse fungible (ERC-20), nft (ERC-721 and ERC-1155), multitoken (ERC-1155) or native.\n"},"transactionSubtype":{"type":"string","enum":["incoming","outgoing","zero-transfer"],"examples":["incoming"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to filter transaction based on subtype."},"tokenAddress":{"type":"string","description":"Address of a token (smart contract).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"ID of a token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"blockFrom":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Transactions from this block onwards will be included. If blockTo is not specified, it is automatically calculated as blockFrom + 1000."},"blockTo":{"type":"number","minimum":0,"examples":[16779230],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Transactions up to this block will be included. If blockFrom is not specified, it is automatically calculated as blockTo - 1000."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."},"cursor":{"type":"string","description":"The cursor to obtain previous page or next page of the data. Available only for Tezos blockchain.","examples":["MzYxNTQ3MHwyNDV8cHJldg=="],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain"]}]},"response":{"200":{"type":"object","properties":{"result":{"type":"array","description":"List of all selected transactions.","items":{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"description":"`ethereum` `ethereum-sepolia` `ethereum-holesky` `celo` `celo-testnet` `bsc` `bsc-testnet` `polygon` `eon` `chiliz`"},"hash":{"type":"string","description":"The transaction hash.","examples":["0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3"]},"address":{"type":"string","description":"The address involved in the transaction.","examples":["0xdef1c0ded9bec7f1a1670819833240f027b25eff"]},"counterAddress":{"type":"string","description":"The counter address involved in the transaction (optional).","examples":["0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"]},"tokenAddress":{"type":"string","description":"The token address involved in the transaction (optional).","examples":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"]},"tokenId":{"type":"string","description":"The ID of the token involved in the transaction (optional).","examples":[33]},"blockNumber":{"type":"number","description":"The block number in which the transaction occurred.","examples":[16819465]},"transactionIndex":{"type":"number","description":"The transaction index within the block.","examples":[84]},"transactionType":{"type":"string","description":"The type of the transaction.\n\n`fungible` `nft` `multitoken` `native`","enum":["fungible","nft","multitoken","native"]},"transactionSubtype":{"type":"string","description":"The subtype of the transaction.\n\n`incoming` `outgoing` `zero-transfer`","enum":["incoming","outgoing","zero-transfer"]},"amount":{"type":"string","description":"The amount transferred in the transaction.","examples":[0.9909237063720822]},"timestamp":{"type":"number","description":"The timestamp when the transaction occurred.","examples":[1678715303000]}}}},"prevPage":{"type":"string","description":"Cursor pagination, used to get previous page of results (only relevant for Tezos).","examples":["KtYxNTQ3MHwyNDV8cHJldgs="]},"nextPage":{"type":"string","description":"Cursor pagination, used to get next page of results (only relevant for Tezos).","examples":["MzYxNTQ3MHwyNDV8cHJldg=="]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetTransactionsByHash = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","celo","celo-testnet","bsc","bsc-testnet","polygon","tezos","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"hash":{"type":"string","examples":["0xd49f8d6544f2822522886a02f4787a56ea93bbd636bfdf81d6795a10553d7118"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Hash of the transaction."}},"required":["chain","hash"]}]},"response":{"200":{"type":"array","description":"Selected transaction.","items":{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"description":"`ethereum` `ethereum-sepolia` `ethereum-holesky` `celo` `celo-testnet` `bsc` `bsc-testnet` `polygon` `eon` `chiliz`"},"hash":{"type":"string","description":"The transaction hash.","examples":["0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3"]},"address":{"type":"string","description":"The address involved in the transaction.","examples":["0xdef1c0ded9bec7f1a1670819833240f027b25eff"]},"counterAddress":{"type":"string","description":"The counter address involved in the transaction (optional).","examples":["0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"]},"tokenAddress":{"type":"string","description":"The token address involved in the transaction (optional).","examples":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"]},"tokenId":{"type":"string","description":"The ID of the token involved in the transaction (optional).","examples":[33]},"blockNumber":{"type":"number","description":"The block number in which the transaction occurred.","examples":[16819465]},"transactionIndex":{"type":"number","description":"The transaction index within the block.","examples":[84]},"transactionType":{"type":"string","description":"The type of the transaction.\n\n`fungible` `nft` `multitoken` `native`","enum":["fungible","nft","multitoken","native"]},"transactionSubtype":{"type":"string","description":"The subtype of the transaction.\n\n`incoming` `outgoing` `zero-transfer`","enum":["incoming","outgoing","zero-transfer"]},"amount":{"type":"string","description":"The amount transferred in the transaction.","examples":[0.9909237063720822]},"timestamp":{"type":"number","description":"The timestamp when the transaction occurred.","examples":[1678715303000]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetTransactionsByHashV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","celo","celo-testnet","bsc","bsc-testnet","polygon","tezos","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"hash":{"type":"string","examples":["0xd49f8d6544f2822522886a02f4787a56ea93bbd636bfdf81d6795a10553d7118"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Hash of the transaction."}},"required":["chain","hash"]}]},"response":{"200":{"type":"array","description":"Selected transaction.","items":{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"description":"`ethereum` `ethereum-sepolia` `ethereum-holesky` `celo` `celo-testnet` `bsc` `bsc-testnet` `polygon` `eon` `chiliz`"},"hash":{"type":"string","description":"The transaction hash.","examples":["0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3"]},"address":{"type":"string","description":"The address involved in the transaction.","examples":["0xdef1c0ded9bec7f1a1670819833240f027b25eff"]},"counterAddress":{"type":"string","description":"The counter address involved in the transaction (optional).","examples":["0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"]},"tokenAddress":{"type":"string","description":"The token address involved in the transaction (optional).","examples":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"]},"tokenId":{"type":"string","description":"The ID of the token involved in the transaction (optional).","examples":[33]},"blockNumber":{"type":"number","description":"The block number in which the transaction occurred.","examples":[16819465]},"transactionIndex":{"type":"number","description":"The transaction index within the block.","examples":[84]},"transactionType":{"type":"string","description":"The type of the transaction.\n\n`fungible` `nft` `multitoken` `native`","enum":["fungible","nft","multitoken","native"]},"transactionSubtype":{"type":"string","description":"The subtype of the transaction.\n\n`incoming` `outgoing` `zero-transfer`","enum":["incoming","outgoing","zero-transfer"]},"amount":{"type":"string","description":"The amount transferred in the transaction.","examples":[0.9909237063720822]},"timestamp":{"type":"number","description":"The timestamp when the transaction occurred.","examples":[1678715303000]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetTransactionsV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","celo","celo-testnet","bsc","bsc-testnet","polygon","tezos","eon","chiliz"],"examples":["ethereum"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain to work with."},"addresses":{"type":"string","examples":["0x2474a7227877f2b65185f09468af7c6577fa207c"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain public wallet addresses.\nIt is possible to enter list of up to 10 addresses as a comma separated string.\n"},"transactionTypes":{"type":"string","enum":["fungible","nft","multitoken","native"],"examples":["fungible,nft"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to filter transaction based on types.\nIt is possible to enter list of multiple types as a comma separated string.\nUse fungible (ERC-20), nft (ERC-721 and ERC-1155), multitoken (ERC-1155) or native.\n"},"transactionSubtype":{"type":"string","enum":["incoming","outgoing","zero-transfer"],"examples":["incoming"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The option to filter transaction based on subtype."},"tokenAddress":{"type":"string","description":"Address of a token (smart contract).","examples":["0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"tokenId":{"type":"string","description":"ID of a token.","maxLength":78,"format":"uint256","examples":["3"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"blockFrom":{"type":"number","minimum":0,"examples":[16499510],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Transactions from this block onwards will be included. If blockTo is not specified, it is automatically calculated as blockFrom + 1000."},"blockTo":{"type":"number","minimum":0,"examples":[16779230],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Transactions up to this block will be included. If blockFrom is not specified, it is automatically calculated as blockTo - 1000."},"pageSize":{"type":"number","minimum":1,"maximum":50,"examples":[10],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The number of items per page (default is 50)."},"offset":{"type":"number","examples":[0],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The offset to obtain next page of the data."},"cursor":{"type":"string","description":"The cursor to obtain previous page or next page of the data. Available only for Tezos blockchain.","examples":["MzYxNTQ3MHwyNDV8cHJldg=="],"$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["chain"]}]},"response":{"200":{"type":"object","properties":{"result":{"type":"array","description":"List of all selected transactions.","items":{"type":"object","properties":{"chain":{"type":"string","enum":["ethereum","ethereum-sepolia","ethereum-holesky","celo","celo-testnet","bsc","bsc-testnet","polygon","eon","chiliz"],"examples":["ethereum"],"description":"`ethereum` `ethereum-sepolia` `ethereum-holesky` `celo` `celo-testnet` `bsc` `bsc-testnet` `polygon` `eon` `chiliz`"},"hash":{"type":"string","description":"The transaction hash.","examples":["0x549447710026cef714da21fb29cbfae1f689bd3246f2fa0a5081149c4aeb3bb3"]},"address":{"type":"string","description":"The address involved in the transaction.","examples":["0xdef1c0ded9bec7f1a1670819833240f027b25eff"]},"counterAddress":{"type":"string","description":"The counter address involved in the transaction (optional).","examples":["0x0d4a11d5eeaac28ec3f61d100daf4d40471f1852"]},"tokenAddress":{"type":"string","description":"The token address involved in the transaction (optional).","examples":["0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2"]},"tokenId":{"type":"string","description":"The ID of the token involved in the transaction (optional).","examples":[33]},"blockNumber":{"type":"number","description":"The block number in which the transaction occurred.","examples":[16819465]},"transactionIndex":{"type":"number","description":"The transaction index within the block.","examples":[84]},"transactionType":{"type":"string","description":"The type of the transaction.\n\n`fungible` `nft` `multitoken` `native`","enum":["fungible","nft","multitoken","native"]},"transactionSubtype":{"type":"string","description":"The subtype of the transaction.\n\n`incoming` `outgoing` `zero-transfer`","enum":["incoming","outgoing","zero-transfer"]},"amount":{"type":"string","description":"The amount transferred in the transaction.","examples":[0.9909237063720822]},"timestamp":{"type":"number","description":"The timestamp when the transaction occurred.","examples":[1678715303000]}}}},"prevPage":{"type":"string","description":"Cursor pagination, used to get previous page of results (only relevant for Tezos).","examples":["KtYxNTQ3MHwyNDV8cHJldgs="]},"nextPage":{"type":"string","description":"Cursor pagination, used to get next page of results (only relevant for Tezos).","examples":["MzYxNTQ3MHwyNDV8cHJldg=="]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetUtxosByAddress = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"description":"The blockchain to work with.","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"address":{"type":"string","examples":["bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain address."},"totalValue":{"type":"number","minimum":0,"examples":[0.0001],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The total amount of transaction you want to send. Only UTXOs up to this amount will be returned, so you will not spend more than you need."}},"required":["chain","address","totalValue"]}]},"response":{"200":{"type":"array","description":"Information about specific collection or token\n(not all fields are available for every token, e.g. some multitokens do not have name and symbol).\n","items":{"type":"object","required":["chain","address","txHash","index","value","valueAsString"],"properties":{"chain":{"description":"The blockchain to work with.\n\n`bitcoin` `bitcoin-mainnet` `bitcoin-testnet` `litecoin` `litecoin-mainnet` `litecoin-testnet` `doge` `doge-mainnet` `doge-testnet` `cardano` `cardano-mainnet` `cardano-preprod`","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"]},"address":{"type":"string","description":"Address of the UTXO","examples":["bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2"]},"txHash":{"type":"string","description":"Hash of the transaction this UTXO is present in","examples":["0x1b5b3e8a671434bf5d0d38e3e52dcafac484441a48bfae4a3f71e5b0b3093d8e"]},"index":{"type":"number","description":"Index of the UTXO in the transaction","examples":[0]},"value":{"type":"number","description":"Value of the UTXO, in BTC, LTC or DOGE.","examples":[0.0001]},"valueAsString":{"type":"string","description":"String representation of the value of the UTXO, in BTC, LTC or DOGE.","examples":["0.0001"]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetUtxosByAddressBatch = {"body":{"type":"object","required":["addresses","totalValue"],"properties":{"chain":{"description":"The blockchain to work with.","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"]},"addresses":{"description":"Addresses","type":"array","items":{"type":"string"},"maxItems":50,"minItems":1},"totalValue":{"description":"The total amount of transaction you want to send. Only UTXOs up to this amount will be returned, so you will not spend more than you need.","type":"number","minimum":0,"examples":[0.0001]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"type":"array","description":"Information about specific collection or token\n(not all fields are available for every token, e.g. some multitokens do not have name and symbol).\n","items":{"type":"object","properties":{"address":{"type":"string","description":"The blockchain address.","examples":["bc1qdj8dxppx6gyukpemsqx06a39877rt8kcc08uqs"]},"utxos":{"type":"array","description":"UTXOs up to amount for address.","items":{"type":"object","required":["chain","address","txHash","index","value","valueAsString"],"properties":{"chain":{"description":"The blockchain to work with.\n\n`bitcoin` `bitcoin-mainnet` `bitcoin-testnet` `litecoin` `litecoin-mainnet` `litecoin-testnet` `doge` `doge-mainnet` `doge-testnet` `cardano` `cardano-mainnet` `cardano-preprod`","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"]},"address":{"type":"string","description":"Address of the UTXO","examples":["bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2"]},"txHash":{"type":"string","description":"Hash of the transaction this UTXO is present in","examples":["0x1b5b3e8a671434bf5d0d38e3e52dcafac484441a48bfae4a3f71e5b0b3093d8e"]},"index":{"type":"number","description":"Index of the UTXO in the transaction","examples":[0]},"value":{"type":"number","description":"Value of the UTXO, in BTC, LTC or DOGE.","examples":[0.0001]},"valueAsString":{"type":"string","description":"String representation of the value of the UTXO, in BTC, LTC or DOGE.","examples":["0.0001"]}}}},"transactionPossible":{"type":"boolean","description":"Indicate whether the total value of UTXOs is sufficient for the transaction.","examples":[true]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetUtxosByAddressBatchV4 = {"body":{"type":"object","required":["addresses","totalValue"],"properties":{"chain":{"description":"The blockchain to work with.","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"]},"addresses":{"description":"Addresses","type":"array","items":{"type":"string"},"maxItems":50,"minItems":1},"totalValue":{"description":"The total amount of transaction you want to send. Only UTXOs up to this amount will be returned, so you will not spend more than you need.","type":"number","minimum":0,"examples":[0.0001]}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"type":"array","description":"Information about specific collection or token\n(not all fields are available for every token, e.g. some multitokens do not have name and symbol).\n","items":{"type":"object","properties":{"address":{"type":"string","description":"The blockchain address.","examples":["bc1qdj8dxppx6gyukpemsqx06a39877rt8kcc08uqs"]},"utxos":{"type":"array","description":"UTXOs up to amount for address.","items":{"type":"object","required":["chain","address","txHash","index","value","valueAsString"],"properties":{"chain":{"description":"The blockchain to work with.\n\n`bitcoin` `bitcoin-mainnet` `bitcoin-testnet` `litecoin` `litecoin-mainnet` `litecoin-testnet` `doge` `doge-mainnet` `doge-testnet` `cardano` `cardano-mainnet` `cardano-preprod`","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"]},"address":{"type":"string","description":"Address of the UTXO","examples":["bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2"]},"txHash":{"type":"string","description":"Hash of the transaction this UTXO is present in","examples":["0x1b5b3e8a671434bf5d0d38e3e52dcafac484441a48bfae4a3f71e5b0b3093d8e"]},"index":{"type":"number","description":"Index of the UTXO in the transaction","examples":[0]},"value":{"type":"number","description":"Value of the UTXO, in BTC, LTC or DOGE.","examples":[0.0001]},"valueAsString":{"type":"string","description":"String representation of the value of the UTXO, in BTC, LTC or DOGE.","examples":["0.0001"]}}}},"transactionPossible":{"type":"boolean","description":"Indicate whether the total value of UTXOs is sufficient for the transaction.","examples":[true]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetUtxosByAddressV4 = {"metadata":{"allOf":[{"type":"object","properties":{"chain":{"description":"The blockchain to work with.","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"address":{"type":"string","examples":["bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2"],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The blockchain address."},"totalValue":{"type":"number","minimum":0,"examples":[0.0001],"$schema":"https://json-schema.org/draft/2020-12/schema#","description":"The total amount of transaction you want to send. Only UTXOs up to this amount will be returned, so you will not spend more than you need."}},"required":["chain","address","totalValue"]}]},"response":{"200":{"type":"array","description":"Information about specific collection or token\n(not all fields are available for every token, e.g. some multitokens do not have name and symbol).\n","items":{"type":"object","required":["chain","address","txHash","index","value","valueAsString"],"properties":{"chain":{"description":"The blockchain to work with.\n\n`bitcoin` `bitcoin-mainnet` `bitcoin-testnet` `litecoin` `litecoin-mainnet` `litecoin-testnet` `doge` `doge-mainnet` `doge-testnet` `cardano` `cardano-mainnet` `cardano-preprod`","type":"string","enum":["bitcoin","bitcoin-mainnet","bitcoin-testnet","litecoin","litecoin-mainnet","litecoin-testnet","doge","doge-mainnet","doge-testnet","cardano","cardano-mainnet","cardano-preprod"],"examples":["bitcoin"]},"address":{"type":"string","description":"Address of the UTXO","examples":["bc1qmfp2r68cde646jv5ns7x2qvah8v5qtfw8gznj2"]},"txHash":{"type":"string","description":"Hash of the transaction this UTXO is present in","examples":["0x1b5b3e8a671434bf5d0d38e3e52dcafac484441a48bfae4a3f71e5b0b3093d8e"]},"index":{"type":"number","description":"Index of the UTXO in the transaction","examples":[0]},"value":{"type":"number","description":"Value of the UTXO, in BTC, LTC or DOGE.","examples":[0.0001]},"valueAsString":{"type":"string","description":"String representation of the value of the UTXO, in BTC, LTC or DOGE.","examples":["0.0001"]}}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"400":{"properties":{"errorCode":{"description":"validation.failed","type":"string","examples":["validation.failed"]},"message":{"description":"Request validation failed. Please see data for additional information.","type":"string","examples":["Request validation failed. Please see data for additional information."]},"statusCode":{"description":"400","type":"number","examples":[400]},"data":{"type":"array","items":{"type":"object","required":["target"],"properties":{"target":{"type":"object","additionalProperties":true,"description":"Request object present in the body of the HTTP request"},"value":{"type":"number","description":"Value of the target object which validation is wrong. Can be of any data type, example here is using type number.","examples":[12345]},"property":{"type":"string","description":"Property name of the target object which validation is wrong","examples":["property1"]},"constraints":{"type":"object","additionalProperties":true,"description":"Object of failed constraints for the target object. Key is the constraint, value is detailed description of the failed constraint."}}}}},"required":["errorCode","message","statusCode","data"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"401":{"oneOf":[{"properties":{"errorCode":{"description":"subscription.not.active","type":"string","examples":["subscription.not.active"]},"message":{"description":"Subscription not active anymore.","type":"string","examples":["Subscription not active anymore."]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"},{"properties":{"errorCode":{"description":"subscription.invalid","type":"string","examples":["subscription.invalid"]},"message":{"description":"Unable to find valid subscription for '${apiKey}'","type":"string","examples":["Unable to find valid subscription for '${apiKey}'"]},"statusCode":{"description":"401","type":"number","examples":[401]}},"required":["errorCode","message","statusCode"],"type":"object"}],"$schema":"https://json-schema.org/draft/2020-12/schema#"},"403":{"properties":{"message":{"description":"Forbidden","type":"string","examples":["Forbidden"]},"statusCode":{"description":"403","type":"number","examples":[403]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"},"500":{"properties":{"message":{"description":"Internal server error","type":"string","examples":["Internal server error"]},"statusCode":{"description":"500","type":"number","examples":[500]}},"required":["statusCode","message"],"type":"object","$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
export { CheckOwner, CheckOwnerV4, GetBalances, GetBalancesV4, GetBlocks, GetBlocksV4, GetCollections, GetCollectionsV4, GetEvents, GetEventsV4, GetLatestBlock, GetLatestBlockV4, GetMetadata, GetMetadataV4, GetOwners, GetOwnersV4, GetTokens, GetTokensV4, GetTransactions, GetTransactionsByHash, GetTransactionsByHashV4, GetTransactionsV4, GetUtxosByAddress, GetUtxosByAddressBatch, GetUtxosByAddressBatchV4, GetUtxosByAddressV4 }
